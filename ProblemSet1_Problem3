'''
ALPHABETICAL SUBSTRINGS  (15 points possible)
Assume s is a string of lower case characters.
Write a program that prints the longest substring of s in which the letters 
occur in alphabetical order. For example, if s = 'azcbobobegghakl', then your 
program should print
Longest substring in alphabetical order is: beggh
In the case of ties, print the first substring. For example, if s = 'abcbcd', 
then your program should print
Longest substring in alphabetical order is: abc
For problems such as these, do not include raw_input statements or define the 
variable s in any way. Our automating testing will provide a value of s for 
you - so the code you submit in the following box should assume s is already 
defined. If you are confused by this instruction, please review L4 Problems 
10 and 11 before you begin this problem set.
'''

'''
This program only works when all the characters are in lowercases
'''
longest = s[0]
current = s[0]
count = 0
for i in range(len(s)-1): 
# you can replace current[-1] with s[i], it still works
    if s[i+1] >= current[-1]: 
        current += s[i+1]
        if len(current) > len(longest):
            longest = current
    else:
        current = s[i+1]
print("Longest substring in alphabetical order is: " + longest)
